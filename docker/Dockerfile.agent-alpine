# syntax=docker/dockerfile:1
FROM jenkins/inbound-agent:alpine3.21-jdk21 AS base

# FROM debian:12.9-slim AS nomad-loader


# ARG NOMAD_VERSION
# ARG TARGETOS=linux
# ARG TARGETARCH=amd64

# # nomad
# ADD https://releases.hashicorp.com/nomad/${NOMAD_VERSION}/nomad_${NOMAD_VERSION}_${TARGETOS}_${TARGETARCH}.zip \
#     nomad_${NOMAD_VERSION}_${TARGETOS}_${TARGETARCH}.zip
# ADD https://releases.hashicorp.com/nomad/${NOMAD_VERSION}/nomad_${NOMAD_VERSION}_SHA256SUMS \
#     nomad_${NOMAD_VERSION}_SHA256SUMS
# ADD https://releases.hashicorp.com/nomad/${NOMAD_VERSION}/nomad_${NOMAD_VERSION}_SHA256SUMS.sig \
#     nomad_${NOMAD_VERSION}_SHA256SUMS.sig

# RUN apt-get update \
#     && apt-get install --yes --no-install-recommends \
#     gnupg \
#     unzip \
#     && GNUPGHOME="$(mktemp -d)" \
#     && export GNUPGHOME \
#     && gpg --keyserver pgp.mit.edu --keyserver keys.openpgp.org --keyserver keyserver.ubuntu.com --recv-keys "C874 011F 0AB4 0511 0D02 1055 3436 5D94 72D7 468F" \
#     && gpg --batch --verify nomad_${NOMAD_VERSION}_SHA256SUMS.sig nomad_${NOMAD_VERSION}_SHA256SUMS \
#     && grep nomad_${NOMAD_VERSION}_${TARGETOS}_${TARGETARCH}.zip nomad_${NOMAD_VERSION}_SHA256SUMS | sha256sum -c \
#     && unzip -d /tmp/nomad nomad_${NOMAD_VERSION}_${TARGETOS}_${TARGETARCH}.zip \
#     && chmod +x /tmp/nomad \
#     && rm -rf "$GNUPGHOME" nomad_${NOMAD_VERSION}_${TARGETOS}_${TARGETARCH}.zip nomad_${NOMAD_VERSION}_SHA256SUMS nomad_${NOMAD_VERSION}_SHA256SUMS.sig

FROM docker:28.2.2-dind-alpine3.21 AS agent

ARG user=jenkins
ARG group=jenkins
ARG uid=1000
ARG gid=1000

RUN addgroup -g "${gid}" "${group}" \
    && adduser -h /home/"${user}" -u "${uid}" -G "${group}" -D "${user}" || echo "user ${user} already exists."

ARG AGENT_WORKDIR=/home/"${user}"/agent

ENV LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8'
ENV TZ=Etc/UTC

RUN apk add --no-cache \
    curl \
    bash \
    git \
    git-lfs \
    musl-locales \
    openssh-client \
    openssl \
    procps \
    tzdata \
    tzdata-utils \
    && rm -rf /tmp/*.apk /tmp/gcc /tmp/gcc-libs.tar* /tmp/libz /tmp/libz.tar.xz /var/cache/apk/*

# COPY --from=nomad-loader --chown="${user}":"${group}" /tmp/nomad/ /usr/local/bin/nomad
COPY --from=base --chown="${user}":"${group}" /usr/share/jenkins/agent.jar /usr/share/jenkins/agent.jar
RUN chmod 0644 /usr/share/jenkins/agent.jar \
    && ln -sf /usr/share/jenkins/agent.jar /usr/share/jenkins/slave.jar


ENV JAVA_HOME=/opt/java/openjdk
COPY --from=base "$JAVA_HOME" "$JAVA_HOME"
ENV PATH="${JAVA_HOME}/bin:${PATH}"

USER "${user}"
ENV AGENT_WORKDIR="${AGENT_WORKDIR}"
RUN mkdir -p /home/"${user}"/.jenkins && mkdir -p "${AGENT_WORKDIR}"

VOLUME /home/"${user}"/.jenkins
VOLUME "${AGENT_WORKDIR}"
WORKDIR /home/"${user}"
ENV USER=${user}


## Inbound Agent image target
FROM agent AS inbound-agent

ARG user=jenkins

USER root
COPY --from=base /usr/local/bin/jenkins-agent /usr/local/bin/jenkins-agent
RUN chmod +x /usr/local/bin/jenkins-agent &&\
    ln -s /usr/local/bin/jenkins-agent /usr/local/bin/jenkins-slave

COPY docker/basefs /
ENV TINI_SUBREAPER=

ENTRYPOINT [ "docker-init", "--", "/usr/local/bin/entrypoint-cstm.sh" ]
CMD ["/usr/local/bin/jenkins-agent"]

#
FROM inbound-agent AS all-mighty

ENV XDG_BIN_HOME=/usr/local/bin \
    UV_NO_MODIFY_PATH=1

# python related
RUN curl -LsSf https://astral.sh/uv/install.sh | bash -s -- -v

RUN uv --version \
    && uv python install \
    3.11 \
    3.12 \
    3.13
